{"version":3,"sources":["components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/Countrypicker/Countrypicker.js","App.js","index.js"],"names":["Cards","data","confirmed","deaths","recovered","lastUpdate","className","Grid","container","spacing","justify","item","component","Card","xs","md","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiyData","map","dailyData","total","date","reportDate","countries","name","Chart","useState","setDailyData","useEffect","fetchApi","dailydata","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","options","maintainAspectRatio","elements","point","radius","barChart","legend","display","title","text","Countrypicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","src","alt","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e70f33f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport './card.css';\r\nimport CountUp from 'react-countup';\r\n\r\nconst Cards = ({ data: { confirmed, deaths, recovered, lastUpdate } }) => {\r\n  // console.log(confirmed.value);\r\n  if (!confirmed) {\r\n    return 'loading.....';\r\n  }\r\n  return (\r\n    <div className=\"card-container\">\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item component={Card} xs={12} md={3} className=\"card-wapper card__infected\">\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className=\"card-wapper card__recovered\">\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">Number of Recovered from COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className=\"card-wapper card__deaths\">\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">Number of deaths caused COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = ' https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, deaths, recovered, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n\r\n    return {\r\n      confirmed,\r\n      deaths,\r\n      recovered,\r\n      lastUpdate,\r\n    };\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    // console.log(data);\r\n    const modifiyData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    // console.log(modifiyData);\r\n    return modifiyData;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const countries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(' https://covid19.mathdro.id/api/countries');\r\n\r\n    return countries.map((country) => country.name);\r\n    // console.log(response);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport './chart.css';\r\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\r\n  // console.log(confirmed);\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      const dailydata = await fetchDailyData();\r\n      // console.log(dailydata);\r\n      setDailyData(dailydata);\r\n    };\r\n    fetchApi();\r\n  }, [1]);\r\n  // console.log(dailyData);\r\n\r\n  // console.log(dailyData.map((data) => data.deaths));\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map((data) => data.date), // ye x axises ke liye hota hai\r\n        datasets: [\r\n          {\r\n            data: dailyData.map((data) => data.confirmed), // ye y axises ke liye hota hai\r\n            label: 'infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map((data) => data.deaths), // ye y axises ke liye hota hai\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255,0,0,0.5)',\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        // plugins: {\r\n        //   legend: {\r\n        //     display: false,\r\n        //   },\r\n        // },\r\n        maintainAspectRatio: false,\r\n        elements: {\r\n          point: {\r\n            radius: 2,\r\n          },\r\n        },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: ['Infected', 'Recovered', 'Deaths'],\r\n        datasets: [\r\n          {\r\n            label: 'people',\r\n            backgroundColor: ['rgb(77, 77, 235)', 'rgb(114, 235, 77)', 'rgb(235, 77, 77)'],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `current state in ${country}` },\r\n        maintainAspectRatio: false,\r\n        elements: {\r\n          point: {\r\n            radius: 2,\r\n          },\r\n        },\r\n      }}\r\n    />\r\n  ) : null;\r\n  return (\r\n    <div>\r\n      <div className=\"showing-country\">{country ? `Cases from ${country}` : `Cases from Globe`}</div>\r\n      <div className=\"chart_container\">{country ? barChart : lineChart} </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { countries } from '../../api';\r\nimport './countrypicker.css';\r\n\r\nconst Countrypicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      setFetchedCountries(await countries());\r\n    };\r\n\r\n    fetchCountries();\r\n  }, [setFetchedCountries]);\r\n\r\n  // console.log(fetchedCountries);\r\n  return (\r\n    <div className=\"country-picker\">\r\n      <FormControl className=\"picker__container\">\r\n        <NativeSelect\r\n          defaultValue=\"\"\r\n          onChange={(e) => {\r\n            handleCountryChange(e.target.value);\r\n          }}\r\n        >\r\n          <option value=\"\">Global</option>\r\n          {fetchedCountries.map((country, i) => {\r\n            return (\r\n              <option value={country} key={i}>\r\n                {country}\r\n              </option>\r\n            );\r\n          })}\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Countrypicker;\r\n","import React from 'react';\n\nimport { Cards, Chart, Countrypicker } from './components';\nimport { fetchData } from './api/index';\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n\n    this.setState({ data: fetchedData });\n  }\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    console.log(fetchedData);\n    this.setState({ data: fetchedData, country: country });\n    console.log(fetchedData);\n  };\n\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className=\"App\">\n        <img className=\"app_header_img\" src=\"https://i.ibb.co/7QpKsCX/image.png\" alt=\"img\" />\n        <Cards data={data} />\n        <Countrypicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}